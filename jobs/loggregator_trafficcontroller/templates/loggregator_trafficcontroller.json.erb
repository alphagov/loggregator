<%
    # try and set these properties from a BOSH 2.0 spec object
    job_name = spec.job.name
    instance_id = spec.id

    if job_name.nil?
      job_name = name
    end

    if instance_id.nil?
      instance_id = spec.index
    end

%>
{
    "JobName": "<%= job_name %>",
    "Index": "<%= instance_id %>",
    "EtcdUrls": [<%= p("loggregator.etcd.machines").map{|addr| "\"#{p("loggregator.etcd.require_ssl") ? "https" : "http"}://#{addr}:4001\""}.join(",") %>],
    "EtcdMaxConcurrentRequests": <%= p("loggregator.etcd.maxconcurrentrequests") %>,
    "EtcdRequireTLS": <%= p("loggregator.etcd.require_ssl") %>,
    <% if_p("loggregator.etcd.require_ssl") do |_| %>
    "EtcdTLSClientConfig": {
        "KeyFile": "/var/vcap/jobs/loggregator_trafficcontroller/config/certs/etcd-client.key",
        "CertFile": "/var/vcap/jobs/loggregator_trafficcontroller/config/certs/etcd-client.crt",
        "CAFile": "/var/vcap/jobs/loggregator_trafficcontroller/config/certs/etcd-ca.crt"
    },
    <% end %>

    "OutgoingDropsondePort": <%= p("loggregator.outgoing_dropsonde_port") %>,
    "DopplerPort": <%= p("loggregator.doppler_port") %>,
    "OutgoingPort": <%= p("traffic_controller.outgoing_port") %>,
    "SkipCertVerify": <%= p("ssl.skip_cert_verify") %>,
    "ApiHost": "<%= p("cc.srv_api_uri") %>",
    "SystemDomain": "<%= p("system_domain") %>",
    "MetronPort": <%= p("metron_endpoint.dropsonde_port") %>,
    <% scheme = p("login.protocol")
        domain = p("system_domain") %>
    "UaaHost": "<%= p("uaa.url", "#{scheme}://uaa.#{domain}") %>",
    "UaaClient": "<%= p("uaa.client") %>",
    "UaaClientSecret": "<%= p("uaa.client_secret") %>"
    <% if_p("syslog_daemon_config") do |_| %>
    , "Syslog": "vcap.trafficcontroller"
    <% end %>
    <% if p("traffic_controller.security_event_logging.enabled") %>
    , "SecurityEventLog": "/var/vcap/sys/log/loggregator_trafficcontroller/loggregator_trafficcontroller_security_events.log"
    <% end %>
}
